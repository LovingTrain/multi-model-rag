自动化测试已在 TMUX 会话 'new_stress_test' 中启动。
测试开始时间: 2025年 10月 30日 星期四 00:10:27 CST

======================================================================
>>> [2025-10-30 00:10:27] EXECUTING COMMAND 1 / 11:
>>> python new_stress_test.py --mode end2end --batch_sizes 100 200 300 400 500 600 

[end2end   bsz=100  ] Avg Total: 0.94994s | Avg Per-Sample: 0.00949939s | Percentiles: [ pp50=0.94963s | pp90=0.95280s | pp95=0.95328s | pp99=0.95477s ]
[end2end   bsz=200  ] Avg Total: 1.90373s | Avg Per-Sample: 0.00951867s | Percentiles: [ pp50=1.90382s | pp90=1.90975s | pp95=1.91126s | pp99=1.91325s ]
[end2end   bsz=300  ] Avg Total: 2.82363s | Avg Per-Sample: 0.00941212s | Percentiles: [ pp50=2.82317s | pp90=2.82573s | pp95=2.82593s | pp99=2.82642s ]
[end2end   bsz=400  ] Avg Total: 3.77481s | Avg Per-Sample: 0.00943703s | Percentiles: [ pp50=3.77450s | pp90=3.77680s | pp95=3.77728s | pp99=3.77839s ]
[end2end   bsz=500  ] Avg Total: 4.68867s | Avg Per-Sample: 0.00937733s | Percentiles: [ pp50=4.68608s | pp90=4.69700s | pp95=4.70025s | pp99=4.70330s ]
[end2end   bsz=600  ] Avg Total: 5.64495s | Avg Per-Sample: 0.00940826s | Percentiles: [ pp50=5.64536s | pp90=5.65025s | pp95=5.65100s | pp99=5.65440s ]
????????? OutOfMemoryError??

======================================================================
>>> [2025-10-30 00:49:41] EXECUTING COMMAND 2 / 11:
>>> python new_stress_test.py --mode search --batch_sizes 100 200 300 400 500 600 700 800 900 1000

[search    bsz=100  ] Avg Total: 0.02731s | Avg Per-Sample: 0.00027315s | Percentiles: [ pp50=0.00040s | pp90=0.22068s | pp95=0.22498s | pp99=0.22778s ]
[search    bsz=200  ] Avg Total: 0.04077s | Avg Per-Sample: 0.00020387s | Percentiles: [ pp50=0.00053s | pp90=0.22383s | pp95=0.22660s | pp99=0.22824s ]
[search    bsz=300  ] Avg Total: 0.08506s | Avg Per-Sample: 0.00028352s | Percentiles: [ pp50=0.00070s | pp90=0.22396s | pp95=0.22577s | pp99=0.22712s ]
[search    bsz=400  ] Avg Total: 0.08550s | Avg Per-Sample: 0.00021375s | Percentiles: [ pp50=0.00087s | pp90=0.22491s | pp95=0.22688s | pp99=0.22974s ]
[search    bsz=500  ] Avg Total: 0.10520s | Avg Per-Sample: 0.00021040s | Percentiles: [ pp50=0.00108s | pp90=0.22486s | pp95=0.22644s | pp99=0.22852s ]
[search    bsz=600  ] Avg Total: 0.12346s | Avg Per-Sample: 0.00020576s | Percentiles: [ pp50=0.21883s | pp90=0.22609s | pp95=0.22738s | pp99=0.22990s ]
[search    bsz=700  ] Avg Total: 0.14104s | Avg Per-Sample: 0.00020148s | Percentiles: [ pp50=0.22054s | pp90=0.22513s | pp95=0.22605s | pp99=0.22739s ]
[search    bsz=800  ] Avg Total: 0.16685s | Avg Per-Sample: 0.00020856s | Percentiles: [ pp50=0.22339s | pp90=0.22793s | pp95=0.22957s | pp99=0.23067s ]
[search    bsz=900  ] Avg Total: 0.17341s | Avg Per-Sample: 0.00019267s | Percentiles: [ pp50=0.22277s | pp90=0.22785s | pp95=0.22892s | pp99=0.23183s ]
[search    bsz=1000 ] Avg Total: 0.17377s | Avg Per-Sample: 0.00017377s | Percentiles: [ pp50=0.22338s | pp90=0.22823s | pp95=0.22981s | pp99=0.23191s ]



>>> python new_stress_test.py --mode embedding --batch_sizes 100 200 300 400 500 600 700 800 900
----------------------------------------------------------------------

[embedding bsz=100  ] Avg Total: 0.94914s | Avg Per-Sample: 0.00949141s | Percentiles: [ pp50=0.94881s | pp90=0.95221s | pp95=0.95240s | pp99=0.95325s ]
[embedding bsz=200  ] Avg Total: 1.90385s | Avg Per-Sample: 0.00951924s | Percentiles: [ pp50=1.90472s | pp90=1.90817s | pp95=1.90949s | pp99=1.91130s ]
[embedding bsz=300  ] Avg Total: 2.82406s | Avg Per-Sample: 0.00941352s | Percentiles: [ pp50=2.82358s | pp90=2.82769s | pp95=2.82877s | pp99=2.83034s ]
[embedding bsz=400  ] Avg Total: 3.78022s | Avg Per-Sample: 0.00945055s | Percentiles: [ pp50=3.78070s | pp90=3.78382s | pp95=3.78448s | pp99=3.78663s ]
[embedding bsz=500  ] Avg Total: 4.69458s | Avg Per-Sample: 0.00938916s | Percentiles: [ pp50=4.69406s | pp90=4.69776s | pp95=4.69854s | pp99=4.70089s ]
[embedding bsz=600  ] Avg Total: 5.64350s | Avg Per-Sample: 0.00940583s | Percentiles: [ pp50=5.64262s | pp90=5.65140s | pp95=5.65347s | pp99=5.65736s ]
[embedding bsz=700  ] Avg Total: 6.56254s | Avg Per-Sample: 0.00937505s | Percentiles: [ pp50=6.55848s | pp90=6.57225s | pp95=6.57394s | pp99=6.57524s ]
[embedding bsz=800  ] Avg Total: 7.51272s | Avg Per-Sample: 0.00939090s | Percentiles: [ pp50=7.50397s | pp90=7.53018s | pp95=7.53214s | pp99=7.59014s ]
[embedding bsz=900  ] Avg Total: 8.45982s | Avg Per-Sample: 0.00939980s | Percentiles: [ pp50=8.45604s | pp90=8.46986s | pp95=8.47279s | pp99=8.55720s ]
--- Command completed successfully (exit code: 0) ---


>>> python new_stress_test.py --mode with_search --batch_sizes 100 200 300 400 500 600
----------------------------------------------------------------------


[with_search bsz=100  ] Avg Total: 13.05174s | Avg Per-Sample: 0.13051736s | Percentiles: [ pp50=0.95878s | pp90=84.48346s | pp95=96.51037s | pp99=101.28341s ]
[with_search bsz=200  ] Avg Total: 15.33680s | Avg Per-Sample: 0.07668398s | Percentiles: [ pp50=1.89951s | pp90=103.91234s | pp95=107.04871s | pp99=110.01054s ]
[with_search bsz=300  ] Avg Total: 16.44590s | Avg Per-Sample: 0.05481967s | Percentiles: [ pp50=2.81296s | pp90=103.02212s | pp95=108.88631s | pp99=115.28276s ]
[with_search bsz=400  ] Avg Total: 19.44372s | Avg Per-Sample: 0.04860930s | Percentiles: [ pp50=3.75262s | pp90=104.09064s | pp95=111.48263s | pp99=116.04035s ]
[with_search bsz=500  ] Avg Total: 19.87075s | Avg Per-Sample: 0.03974150s | Percentiles: [ pp50=4.66558s | pp90=104.72248s | pp95=107.28534s | pp99=111.20698s ]
[with_search bsz=600  ] Avg Total: 19.13883s | Avg Per-Sample: 0.03189805s | Percentiles: [ pp50=5.61144s | pp90=105.13764s | pp95=110.62663s | pp99=116.33416s ]
--- Command completed successfully (exit code: 0) ---


======================================================================
>>> [2025-10-30 05:18:48] EXECUTING COMMAND 5 / 11:
>>> python new_stress_test.py --mode with_embedding --batch_sizes 100 200 300 400 500 600 700
----------------------------------------------------------------------

[with_embedding bsz=100  ] Avg Total: 0.03644s | Avg Per-Sample: 0.00036435s | Percentiles: [ pp50=0.00086s | pp90=0.22270s | pp95=0.22427s | pp99=0.22602s ]
[with_embedding bsz=200  ] Avg Total: 0.06120s | Avg Per-Sample: 0.00030599s | Percentiles: [ pp50=0.00109s | pp90=0.22472s | pp95=0.22670s | pp99=0.22999s ]
[with_embedding bsz=300  ] Avg Total: 0.07257s | Avg Per-Sample: 0.00024189s | Percentiles: [ pp50=0.00121s | pp90=0.22581s | pp95=0.22828s | pp99=0.23022s ]
[with_embedding bsz=400  ] Avg Total: 0.09524s | Avg Per-Sample: 0.00023810s | Percentiles: [ pp50=0.00131s | pp90=0.22698s | pp95=0.22866s | pp99=0.23145s ]
[with_embedding bsz=500  ] Avg Total: 0.13042s | Avg Per-Sample: 0.00026084s | Percentiles: [ pp50=0.21969s | pp90=0.22697s | pp95=0.22852s | pp99=0.23061s ]
[with_embedding bsz=600  ] Avg Total: 0.13534s | Avg Per-Sample: 0.00022556s | Percentiles: [ pp50=0.22121s | pp90=0.22718s | pp95=0.22903s | pp99=0.23166s ]
[with_embedding bsz=700  ] Avg Total: 0.15306s | Avg Per-Sample: 0.00021865s | Percentiles: [ pp50=0.22157s | pp90=0.22837s | pp95=0.22960s | pp99=0.23147s ]
[with_embedding bsz=800  ] Avg Total: 0.15484s | Avg Per-Sample: 0.00019355s | Percentiles: [ pp50=0.22418s | pp90=0.22988s | pp95=0.23079s | pp99=0.23202s ]
[with_embedding bsz=900  ] Avg Total: 0.16414s | Avg Per-Sample: 0.00018237s | Percentiles: [ pp50=0.22486s | pp90=0.22975s | pp95=0.23151s | pp99=0.23343s ]
[with_embedding bsz=1000 ] Avg Total: 0.18625s | Avg Per-Sample: 0.00018625s | Percentiles: [ pp50=0.22588s | pp90=0.22941s | pp95=0.23123s | pp99=0.23395s ]

-- Command completed successfully (exit code: 0) ---

----------------------------------------------------------------------
>>> 命令执行完毕，将休眠 5 分钟...
>>> 下一条命令将在 2025-10-30 05:42:41 左右开始执行。
----------------------------------------------------------------------

======================================================================
>>> [2025-10-30 05:42:41] EXECUTING COMMAND 6 / 11:
>>> python new_stress_test.py --mode end2end --batch_sizes 10 20  40  60 80 100 120 140 160 --prompt_length 1024

[end2end   bsz=10   ] Avg Total: 0.75937s | Avg Per-Sample: 0.07593682s | Percentiles: [ pp50=0.75900s | pp90=0.76143s | pp95=0.76185s | pp99=0.76320s ]
[end2end   bsz=20   ] Avg Total: 1.53128s | Avg Per-Sample: 0.07656380s | Percentiles: [ pp50=1.53209s | pp90=1.53404s | pp95=1.53558s | pp99=1.53840s ]
[end2end   bsz=40   ] Avg Total: 3.01510s | Avg Per-Sample: 0.07537738s | Percentiles: [ pp50=3.01493s | pp90=3.01627s | pp95=3.01699s | pp99=3.01797s ]
[end2end   bsz=60   ] Avg Total: 4.50734s | Avg Per-Sample: 0.07512237s | Percentiles: [ pp50=4.50673s | pp90=4.50984s | pp95=4.51209s | pp99=4.51375s ]
[end2end   bsz=80   ] Avg Total: 6.00695s | Avg Per-Sample: 0.07508690s | Percentiles: [ pp50=6.00678s | pp90=6.01015s | pp95=6.01063s | pp99=6.01172s ]

Traceback (most recent call last):

                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.74 GiB. GPU 0 has a total capacity of 31.36 GiB of which 2.65 GiB is free. Including non-PyTorch memory, this process has 28.70 GiB memory in use. Of the allocated memory 21.87 GiB is allocated by PyTorch, and 2.92 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)




======================================================================
>>> [2025-10-30 06:14:53] EXECUTING COMMAND 7 / 11:
>>> python new_stress_test.py --mode embedding --batch_sizes 10 20  40  60 80 100 120 140 160 --prompt_length 1024


[embedding bsz=10   ] Avg Total: 0.75858s | Avg Per-Sample: 0.07585777s | Percentiles: [ pp50=0.75821s | pp90=0.76122s | pp95=0.76151s | pp99=0.76235s ]
[embedding bsz=20   ] Avg Total: 1.53096s | Avg Per-Sample: 0.07654824s | Percentiles: [ pp50=1.53179s | pp90=1.53467s | pp95=1.53559s | pp99=1.53881s ]
[embedding bsz=40   ] Avg Total: 3.01552s | Avg Per-Sample: 0.07538788s | Percentiles: [ pp50=3.01412s | pp90=3.01827s | pp95=3.02254s | pp99=3.02669s ]
[embedding bsz=60   ] Avg Total: 4.50798s | Avg Per-Sample: 0.07513305s | Percentiles: [ pp50=4.50758s | pp90=4.51084s | pp95=4.51220s | pp99=4.51331s ]
[embedding bsz=80   ] Avg Total: 6.00986s | Avg Per-Sample: 0.07512331s | Percentiles: [ pp50=6.01081s | pp90=6.01523s | pp95=6.01617s | pp99=6.01775s ]
[embedding bsz=100  ] Avg Total: 7.49754s | Avg Per-Sample: 0.07497543s | Percentiles: [ pp50=7.49839s | pp90=7.50342s | pp95=7.50431s | pp99=7.50639s ]
Traceback (most recent call last):

torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 3.29 GiB. GPU 0 has a total capacity of 31.36 GiB of which 1.60 GiB is free. Including non-PyTorch memory, this process has 29.75 GiB memory in use. Of the allocated memory 23.59 GiB is allocated by PyTorch, and 5.58 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)



======================================================================
>>> [2025-10-30 06:59:38] EXECUTING COMMAND 8 / 11:
>>> python new_stress_test.py --mode with_search --batch_sizes 10 20  40  60 80 100 120 140 160  --prompt_length 1024

[with_search bsz=10   ] Avg Total: 14.94556s | Avg Per-Sample: 1.49455568s | Percentiles: [ pp50=0.77208s | pp90=97.95828s | pp95=104.59131s | pp99=108.18548s ]
[with_search bsz=20   ] Avg Total: 14.47932s | Avg Per-Sample: 0.72396606s | Percentiles: [ pp50=1.53081s | pp90=97.47867s | pp95=102.32602s | pp99=108.99728s ]
[with_search bsz=40   ] Avg Total: 18.11290s | Avg Per-Sample: 0.45282258s | Percentiles: [ pp50=3.00008s | pp90=101.07984s | pp95=104.27332s | pp99=111.67078s ]
[with_search bsz=60   ] Avg Total: 17.70794s | Avg Per-Sample: 0.29513232s | Percentiles: [ pp50=4.49343s | pp90=100.15012s | pp95=106.12375s | pp99=114.20095s ]
[with_search bsz=80   ] Avg Total: 18.38530s | Avg Per-Sample: 0.22981621s | Percentiles: [ pp50=5.96600s | pp90=106.70859s | pp95=109.03822s | pp99=113.96016s ]
Traceback (most recent call last):

                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.74 GiB. GPU 0 has a total capacity of 31.36 GiB of which 2.65 GiB is free. Including non-PyTorch memory, this process has 28.70 GiB memory in use. Of the allocated memory 21.87 GiB is allocated by PyTorch, and 2.92 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)



python new_stress_test.py --mode end2end --batch_sizes 1  4  6  8 10 12 14 16 18 20 --prompt_length 4096
----------------------------------------------------------------------
[end2end   bsz=1    ] Avg Total: 0.44039s | Avg Per-Sample: 0.44038668s | Percentiles: [ pp50=0.44039s | pp90=0.44063s | pp95=0.44073s | pp99=0.44085s ]
[end2end   bsz=4    ] Avg Total: 1.67021s | Avg Per-Sample: 0.41755317s | Percentiles: [ pp50=1.67001s | pp90=1.67405s | pp95=1.67469s | pp99=1.67543s ]
[end2end   bsz=6    ] Avg Total: 2.47293s | Avg Per-Sample: 0.41215473s | Percentiles: [ pp50=2.47252s | pp90=2.47566s | pp95=2.47684s | pp99=2.47742s ]
[end2end   bsz=8    ] Avg Total: 3.28118s | Avg Per-Sample: 0.41014779s | Percentiles: [ pp50=3.28083s | pp90=3.28336s | pp95=3.28430s | pp99=3.28642s ]
[end2end   bsz=10   ] Avg Total: 4.07915s | Avg Per-Sample: 0.40791480s | Percentiles: [ pp50=4.07899s | pp90=4.08096s | pp95=4.08135s | pp99=4.08229s ]
[end2end   bsz=12   ] Avg Total: 4.89100s | Avg Per-Sample: 0.40758348s | Percentiles: [ pp50=4.89115s | pp90=4.89350s | pp95=4.89372s | pp99=4.89428s ]
[end2end   bsz=14   ] Avg Total: 5.68920s | Avg Per-Sample: 0.40637119s | Percentiles: [ pp50=5.68906s | pp90=5.69123s | pp95=5.69154s | pp99=5.69223s ]
[end2end   bsz=16   ] Avg Total: 6.50000s | Avg Per-Sample: 0.40625000s | Percentiles: [ pp50=6.50016s | pp90=6.50119s | pp95=6.50139s | pp99=6.50197s ]
[end2end   bsz=18   ] Avg Total: 7.30005s | Avg Per-Sample: 0.40555859s | Percentiles: [ pp50=7.30016s | pp90=7.30305s | pp95=7.30340s | pp99=7.30474s ]
[end2end   bsz=20   ] Avg Total: 8.11698s | Avg Per-Sample: 0.40584894s | Percentiles: [ pp50=8.11682s | pp90=8.11975s | pp95=8.12018s | pp99=8.12103s ]

python new_stress_test.py --mode embedding --batch_sizes 1  4  6  8 10 12 14 16 18 20  --prompt_length 4096
----------------------------------------------------------------------
[embedding bsz=1    ] Avg Total: 0.43968s | Avg Per-Sample: 0.43968064s | Percentiles: [ pp50=0.43967s | pp90=0.43997s | pp95=0.44003s | pp99=0.44013s ]
[embedding bsz=4    ] Avg Total: 1.66927s | Avg Per-Sample: 0.41731818s | Percentiles: [ pp50=1.66931s | pp90=1.67287s | pp95=1.67339s | pp99=1.67501s ]
[embedding bsz=6    ] Avg Total: 2.47243s | Avg Per-Sample: 0.41207195s | Percentiles: [ pp50=2.47258s | pp90=2.47469s | pp95=2.47494s | pp99=2.47607s ]
[embedding bsz=8    ] Avg Total: 3.28099s | Avg Per-Sample: 0.41012434s | Percentiles: [ pp50=3.28064s | pp90=3.28284s | pp95=3.28411s | pp99=3.28459s ]
[embedding bsz=10   ] Avg Total: 4.07805s | Avg Per-Sample: 0.40780458s | Percentiles: [ pp50=4.07784s | pp90=4.07960s | pp95=4.08004s | pp99=4.08037s ]
[embedding bsz=12   ] Avg Total: 4.89046s | Avg Per-Sample: 0.40753819s | Percentiles: [ pp50=4.89033s | pp90=4.89211s | pp95=4.89236s | pp99=4.89316s ]
[embedding bsz=14   ] Avg Total: 5.69224s | Avg Per-Sample: 0.40658844s | Percentiles: [ pp50=5.69214s | pp90=5.69416s | pp95=5.69471s | pp99=5.69533s ]
[embedding bsz=16   ] Avg Total: 6.50092s | Avg Per-Sample: 0.40630778s | Percentiles: [ pp50=6.50093s | pp90=6.50287s | pp95=6.50321s | pp99=6.50400s ]
